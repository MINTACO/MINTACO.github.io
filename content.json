{"meta":{"title":"Shawn's Blog","subtitle":"纵有疾风起，人生不言弃","description":"前端小白一枚","author":"Shawn","url":""},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2019-11-10T12:08:19.739Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[MINTACO] 与&nbsp;Shawn&nbsp;对话中... bot_ui_ini()","keywords":"关于"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2019-11-10T12:08:19.739Z","comments":false,"path":"bangumi/index.html","permalink":"/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2019-11-10T12:08:19.739Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2019-11-10T12:08:19.739Z","comments":false,"path":"client/index.html","permalink":"/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2019-11-10T12:08:19.739Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2019-11-10T12:08:19.739Z","comments":false,"path":"lab/index.html","permalink":"/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2019-11-10T12:08:19.739Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2019-11-10T12:08:19.755Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2019-11-10T12:08:19.755Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2019-11-10T12:08:19.755Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2019-11-10T12:08:19.755Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2019-11-10T12:08:19.755Z","comments":false,"path":"video/index.html","permalink":"/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"vue插值表达式","slug":"vue插值表达式","date":"2019-11-12T01:01:59.000Z","updated":"2019-11-12T07:06:27.579Z","comments":true,"path":"2019/11/12/vue插值表达式/","link":"","permalink":"/2019/11/12/vue插值表达式/","excerpt":"","text":"简介Vue.js 使用了基于 HTML 的模板语法，允许开发者声明式地将 DOM 绑定至底层 Vue 实例的数据。在底层的实现上，Vue 将模板编译成虚拟 DOM 渲染函数。结合响应系统，Vue 能够智能地计算出最少需要重新渲染多少组件，并把 DOM 操作次数减到最少。数据绑定最常见的形式就是使用“Mustache”语法 (双大括号) 的文本插值，即插值表达式。 用法1.插值表达式中使用的数据必须先在data中存在，才能实现数据绑定；2.支持js表达式,但不支持语句及流控制，可用三目表达式；2.要更改的数据必须先存在，视图才会刷新；3.通过索引或者长度的方式改变数组，视图不会刷新，必须使用数组的变异方法，如push、pop、shift、unshift、sort、reverse、splice；4.$set可用来更改对象的值，例：vm.$set(vm.obj, &#39;xxx&#39;, 90);;也可以更改其他元素，大多用来更改对象。 &lt;div id=&quot;app&quot;&gt; {{ 'a' }}&lt;br/&gt; {{ 1 }}&lt;br/&gt; {{ true }}&lt;br/&gt; {{ [1, 2, 3] }}&lt;br/&gt; {{ {a: 1, b: 10} }}&lt;br/&gt; {{ 1+1 }}&lt;br/&gt; {{ 1-1 }}&lt;br/&gt; {{ 'a' + 'b' }}&lt;br/&gt; &lt;!-- {{ var a = 10; return a; }} 语句不支持&lt;br/&gt; {{ if(true) { return 'a'} }} 流控制不支持，可用三元表达式&lt;br/&gt; --&gt; {{ !true ? 'a' : 'b' }}&lt;br/&gt; {{ name }}&lt;br/&gt; {{ desc }}&lt;br/&gt; {{ arr[0] }}&lt;br/&gt; {{ obj[\"b\"] }}&lt;br/&gt; &lt;/div&gt; &lt;script&gt; const vm = new Vue({ el:&quot;#app&quot;, data:{ name: &#39;ls&#39;, desc: &#39;coder&#39;, arr: [1, 2, 3], obj: { a: 1, b: 10 } } }) // vm.$mount(&#39;#app&#39;);另一种挂载方法 // $el 返回vue作用的DOM元素 &lt;/script&gt;","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"VUE","slug":"VUE","permalink":"/tags/VUE/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"vue指令","slug":"vue指令","date":"2019-11-12T00:58:37.000Z","updated":"2019-11-12T11:38:06.176Z","comments":true,"path":"2019/11/12/vue指令/","link":"","permalink":"/2019/11/12/vue指令/","excerpt":"","text":"v-pre 跳过该元素和它的子元素的变异过程，显示原始的{ { } }的标签 v-cloak 该指令保持在元素上，直到关联实例结束变异 可与css配合使用隐藏未编译的{ { } }标签 v-once 只渲染元素和组件一次。随后的重新渲染，元素/组件及其所有的子节点将被视为静态内容并跳过。这可以用于优化更新性能。vue内部进行了缓存，以后使用的值都是缓存里的结果 v-html === innerHTML XSS 更新元素的innerHTML v-text === innerText 更新元素的innerText，不常用，一般直接使用{ { } } v-if 控制元素是否存在 判断多个相同状态的用标签包裹 v-else – 配合v-if，两者必须相邻 v-else-if 同理 v-show 控制元素的dispaly样式 v-show和v-if的区别？ v-if是控制该元素是否存在，值为false时，完全移除该元素v-show是控制该元素的样式(display)，值为false时，元素的display为none v-if支持template标签v-show不支持template标签 v-bind&lt;=&gt;： 绑定属性，当绑定class，style时有两种方式，绑定多个属性可用[],需条件判断可用{} v-on&lt;=&gt;@ 监听事件this指向 methods里的函数this指向vue实例 函数不可写在data里，this指向window &lt;div id=&quot;app&quot;&gt; &lt;div v-once&gt; {{a}} &lt;/div&gt; &lt;div v-html=&quot;dom&quot;&gt;&lt;/div&gt; &lt;template v-if=&quot;flag&quot;&gt; &lt;div&gt;123&lt;/div&gt; &lt;div&gt;456&lt;/div&gt; &lt;/template&gt; &lt;div v-if=&quot;count === 1&quot;&gt;hello&lt;/div&gt; &lt;div v-else-if=&quot;count === 2&quot;&gt;hi&lt;/div&gt; &lt;div v-else&gt;world&lt;/div&gt; &lt;div v-show=&quot;true&quot;&gt;v-show&lt;/div&gt; &lt;img :src=&quot;imgUrl&quot; alt=&quot;&quot; class=&quot;red&quot; :class=&quot;{ red : flag}&quot; /&gt; &lt;div style=&quot;width: 500px; height: 500px;&quot; :style=&quot;[divStyle, divStyle1]&quot;&gt;i am a div&lt;/div&gt; &lt;button @click=&quot;fn1(1)&quot;&gt;click&lt;/button&gt; &lt;/div&gt; &lt;script&gt; const vm = new Vue({ el: &#39;#app&#39;, data:{ a:1, dom:&#39;&lt;div&gt;ls&lt;/div&gt;&#39;, flag:true, count: 3， imgUrl：&#39;https://i.loli.net/2019/11/12/UmZdgG8HuJ1AMPb.jpg&#39;, divStyle: {width: &#39;100px&#39;, height: &#39;100px&#39;, backgroundColor: &#39;red&#39;}, divStyle1: { color: &#39;#fff&#39;}, //属性名和函数名不能重复 }, methods: { fn1(a){ console.log(a); } } }) &lt;/script&gt; v-for 循环 &lt;div id=&quot;app&quot;&gt; &lt;!-- 遍历数组，需要添加唯一key值，最好不用index --&gt; &lt;button @click = &quot;onclick&quot;&gt;Click&lt;/button&gt; &lt;div v-for=&quot;item in nameArr&quot; :key=&quot;item.id&quot;&gt;{{item.name}}&lt;/div&gt; &lt;br&gt; &lt;br&gt; &lt;!-- 遍历对象，(value,key) --&gt; &lt;div v-for=&quot;(value,key) in person&quot; &gt;{{key}} : {{value}}&lt;/div&gt; &lt;br&gt; &lt;!-- 遍历数字 --&gt; &lt;!-- &lt;div v-for=&quot;item in 10&quot;&gt;{{item}}&lt;/div&gt; --&gt; &lt;br&gt; &lt;!-- 遍历字符串 --&gt; &lt;!-- &lt;div v-for=&quot;item in &#39;lushuo&#39;&quot;&gt;{{item}}&lt;/div&gt; --&gt; &lt;!-- 渲染多个循环，用&lt;template&gt;包裹，但是&lt;template&gt;不能绑定key值，要绑在内部元素，且每个不能相同 --&gt; &lt;template v-for=&quot;(item,index) in arr&quot;&gt; &lt;div :_key=&quot;`${index}_1`&quot; :key=&quot;`${index}_1`&quot;&gt;{{index}}&lt;/div&gt; &lt;span :_key=&quot;`${index}_2`&quot; :key=&quot;`${index}_2`&quot;&gt;{{item}}&lt;/span&gt; &lt;/template&gt; &lt;br&gt; &lt;br&gt; &lt;!-- key值的另一作用：在dom元素相同时，进行区分。如例子中input为相同dom，vue默认会进行复用，导致填的内容不会随着功能切换而改变，加key值解决 --&gt; &lt;div v-if=&quot;flag&quot;&gt; &lt;label for=&quot;name&quot;&gt;姓名&lt;/label&gt; &lt;input type=&quot;text&quot; id=&quot;name&quot; key=&quot;name&quot;&gt; &lt;/div&gt; &lt;div v-else&gt; &lt;label for=&quot;age&quot;&gt;年龄&lt;/label&gt; &lt;input type=&quot;text&quot; id=&quot;age&quot; key=&quot;age&quot;&gt; &lt;/div&gt; &lt;button @click=&quot;change&quot;&gt;互换&lt;/button&gt; &lt;/div&gt; &lt;script&gt; const vm = new Vue({ el:&#39;#app&#39;, data:{ arr:[1,2,3], //nameArr:[&#39;ls&#39;,&#39;dh&#39;,&#39;bb&#39;] //后台返回的数据，一般都有一个id对应 nameArr:[ { name:&#39;ls&#39;, id:201901 }, { name:&#39;dh&#39;, id:201902 }, { name:&#39;bb&#39;, id:201903 } ], person:{ name:&#39;ls&#39;, desc:&#39;boy&#39;, age:23 }, flag:true }, methods:{ onclick(){ this.nameArr.reverse(); }, change(){ this.flag = !this.flag; } } }) &lt;/script&gt; v-model 数据双向绑定，value+input语法糖修饰符 v-model.lazy变成value与change事件得语法糖 v-model.number将输入得数字字符串转成数字 v-model.trim去掉字符串前后空格 &lt;div id=&quot;app&quot;&gt; &lt;input type=&quot;text&quot; v-model=&quot;content[0]&quot;&gt;&lt;br&gt; &lt;textarea v-model=&quot;content1&quot;&gt;&lt;/textarea&gt;&lt;br&gt; {{ content1}} &lt;br&gt; &lt;!-- &lt;input type=&quot;checkbox&quot; v-model=&quot;checked1&quot; /&gt; {{ checked1 }} --&gt; &lt;br&gt; &lt;label for=&quot;cg&quot;&gt;1&lt;/label&gt; &lt;input type=&quot;checkbox&quot; v-model=&quot;checked&quot; id=&quot;cg&quot; value=&quot;cgg&quot; /&gt; &lt;label for=&quot;dg&quot;&gt;2&lt;/label&gt; &lt;input type=&quot;checkbox&quot; v-model=&quot;checked&quot; id=&quot;dg&quot; value=&quot;dgg&quot; /&gt; &lt;label for=&quot;stg&quot;&gt;3&lt;/label&gt; &lt;input type=&quot;checkbox&quot; v-model=&quot;checked&quot; id=&quot;stg&quot; value=&quot;stgg&quot; /&gt; &lt;br&gt; {{ checked }} &lt;!-- 多选存的value值 --&gt; &lt;br&gt; &lt;br&gt; &lt;label for=&quot;one&quot;&gt;one&lt;/label&gt; &lt;input type=&quot;radio&quot; id=&quot;one&quot; value=&quot;one&quot; v-model=&quot;picked&quot;/&gt; &lt;label for=&quot;two&quot;&gt;two&lt;/label&gt; &lt;input type=&quot;radio&quot; id=&quot;two&quot; value=&quot;two&quot; v-model=&quot;picked&quot; /&gt; {{ picked }} &lt;br&gt;&lt;br&gt; &lt;select v-model=&quot;selected&quot;&gt; &lt;option value=&quot;&quot; disabled&gt;请选择&lt;/option&gt; &lt;option value=&quot;A&quot;&gt;A&lt;/option&gt; &lt;option value=&quot;B&quot;&gt;B&lt;/option&gt; &lt;option value=&quot;C&quot;&gt;C&lt;/option&gt; &lt;/select&gt; {{ selected }} &lt;br&gt; &lt;br&gt; &lt;select v-model=&quot;selected&quot; multiple&gt; &lt;option value=&quot;A&quot;&gt;A&lt;/option&gt; &lt;option value=&quot;B&quot;&gt;B&lt;/option&gt; &lt;option value=&quot;C&quot;&gt;C&lt;/option&gt; &lt;/select&gt; {{ selected }} &lt;/div&gt; &lt;script&gt; const vm = new Vue({ el: &#39;#app&#39;, data: { content: [&#39;hello&#39;,&#39;&#39;,&#39;&#39;], content1:[], // checked: true checked: [], checked1: [], picked: &#39;&#39;, //selected: &#39;&#39; selected: [], show: [false,true], }, mathods:{ } }) &lt;/script&gt;","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"VUE","slug":"VUE","permalink":"/tags/VUE/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"hexo多电脑配置","slug":"hexo多电脑配置","date":"2019-11-11T01:29:26.000Z","updated":"2019-11-11T06:50:33.133Z","comments":true,"path":"2019/11/11/hexo多电脑配置/","link":"","permalink":"/2019/11/11/hexo多电脑配置/","excerpt":"","text":"hexo多台电脑配置最近买了新电脑，要把旧电脑上的hexo博客配置转移过来，记录下过程。 1.备份博客原文件先在github博客仓库新建backup分支，在hexo配置文件_config.yml中添加如下配置： # backup backup: type: git message: backup my blog of https://mintaco.github.io/ repository: github: git@github.com:MINTACO/MINTACO.github.io.git,backup 其中仓库地址自行更改；执行hexo backup 2.新电脑安装git,node环境安装完后配置git用户名，邮箱及ssh密钥 3.克隆backup分支到新电脑本地4.复制原电脑中的.ssh文件夹中文件到新电脑的对应文件夹中不复制的话没法deploy","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"Tools","slug":"Tools","permalink":"/tags/Tools/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"测试","slug":"测试-3","date":"2019-11-10T11:15:18.000Z","updated":"2019-11-10T12:08:19.739Z","comments":true,"path":"2019/11/10/测试-3/","link":"","permalink":"/2019/11/10/测试-3/","excerpt":"","text":"","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"Javascript","slug":"Javascript","permalink":"/tags/Javascript/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"测试","slug":"测试-2","date":"2019-11-10T11:14:40.000Z","updated":"2019-11-10T12:08:19.739Z","comments":true,"path":"2019/11/10/测试-2/","link":"","permalink":"/2019/11/10/测试-2/","excerpt":"","text":"","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"VUE","slug":"VUE","permalink":"/tags/VUE/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"测试","slug":"测试-1","date":"2019-11-10T11:14:07.000Z","updated":"2019-11-10T12:08:19.739Z","comments":true,"path":"2019/11/10/测试-1/","link":"","permalink":"/2019/11/10/测试-1/","excerpt":"","text":"","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"/tags/CSS/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"测试","slug":"测试","date":"2019-11-10T11:07:43.000Z","updated":"2019-11-10T12:08:19.739Z","comments":true,"path":"2019/11/10/测试/","link":"","permalink":"/2019/11/10/测试/","excerpt":"","text":"","categories":[{"name":"随想","slug":"随想","permalink":"/categories/随想/"}],"tags":[],"keywords":[{"name":"随想","slug":"随想","permalink":"/categories/随想/"}]},{"title":"好用的控制台模拟器Cmder","slug":"好用的控制台工具Cmder","date":"2019-11-10T10:30:58.000Z","updated":"2019-11-10T12:17:46.987Z","comments":true,"path":"2019/11/10/好用的控制台工具Cmder/","link":"","permalink":"/2019/11/10/好用的控制台工具Cmder/","excerpt":"","text":"Cmder安装及简单配置1.cmder简介小巧强大的控制台模拟器，相比原生win控制台，界面更美观，复制粘贴更方便，支持分屏等，且有强大的快捷操作键，开发更高效。 2.安装官网cmder下载安装，最好下载完整版，支持git。 3.简单配置3.1配置环境变量计算机属性——高级系统设置——环境变量——系统变量，将cmder安装路径添加到PATH中。 3.2将cmder添加到鼠标右键菜单管理员身份开启cmd，运行Cmder.exe /REGISTER ALL 3.3解决中文乱码Settings-&gt;Startup-&gt;Environment 添加set LANG=zh_CN.UTF-8 4.常用快捷键Tab 自动路径补全 Ctrl+T 建立新页签 Ctrl+W 关闭页签 Ctrl+Tab 切换页签 Alt+F4 关闭所有页签 Alt+Shift+1 开启cmd.exe Alt+Shift+2 开启powershell.exe Alt+Shift+3 开启powershell.exe (系统管理员权限) Ctrl+1 快速切换到第1个页签 Ctrl+n 快速切换到第n个页签( n值无上限) Alt + enter 切换到全屏状态 Ctr+r 历史命令搜索","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"Tools","slug":"Tools","permalink":"/tags/Tools/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"又一个普通的周末","slug":"又一个普通的周末","date":"2019-11-10T10:10:18.000Z","updated":"2019-11-10T12:08:19.724Z","comments":true,"path":"2019/11/10/又一个普通的周末/","link":"","permalink":"/2019/11/10/又一个普通的周末/","excerpt":"","text":"周末总是睡不够，今天是lol总决赛的日子，希望FPX赢吧","categories":[{"name":"生活","slug":"生活","permalink":"/categories/生活/"}],"tags":[],"keywords":[{"name":"生活","slug":"生活","permalink":"/categories/生活/"}]},{"title":"MarkDownPad2常用快捷键","slug":"MarkDownPad2常用快捷键","date":"2019-10-31T08:59:52.000Z","updated":"2019-11-10T12:08:19.724Z","comments":true,"path":"2019/10/31/MarkDownPad2常用快捷键/","link":"","permalink":"/2019/10/31/MarkDownPad2常用快捷键/","excerpt":"","text":"Ctrl + I ： 斜体 Ctrl + B ： 粗体 Ctrl + G ： 图片 Ctrl + Q ： 引用 Ctrl + 1 ： 标题 1 Ctrl + 2 ： 标题 2 Ctrl + 3 ： 标题 3 Ctrl + K ： 代码块 Ctrl + L ： 超链接 Ctrl + T ： 时间戳 Ctrl + U ： 无序列表 Ctrl + R ： 水平标尺 F4 ： 启用水平布局 F5 ： 启用实时预览 F6 ： 在浏览器中预览 Ctrl + Shift + O ： 有序列表 本文参考 版权声明：本文为CSDN博主「陈凯冰」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。原文链接：MarkdownPad 2 常用快捷键","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"Tools","slug":"Tools","permalink":"/tags/Tools/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"MarkDown基本语法","slug":"MarkDown基本语法","date":"2019-10-31T08:58:44.000Z","updated":"2019-11-12T07:13:18.253Z","comments":true,"path":"2019/10/31/MarkDown基本语法/","link":"","permalink":"/2019/10/31/MarkDown基本语法/","excerpt":"","text":"标题# 一级标题## 二级标题### 三级标题。。。最大支持六级标题，注意#后加空格 换行行尾加两个空格 原文中显示#,*,&gt;等符号加转义符\\ 缩进使用空格字符进行缩进，如&amp;emsp;&amp;emsp;,缩进两字符,注意结尾分号 html中的常见空格实体（不完全） 空格分类 含义 ‘&amp;nbsp’ 不换行空格，全称是 No-Break Space，即按下space键产生的空格。在HTML代码中，连续使用空格键产生此空格，空格不会累加，即在网页中只显示一个空格。只有使用实体才可累加，该空格占据宽度受字体影响。 ‘&amp;ensp’ 半角空格，全称En Space。en是字体排印学的计量单位，为em宽度的一半。特性稳健，宽度为中文字符宽度的一半，且不受字体影响。 ‘&amp;emsp’ 全角空格，全称是 Em Space。em是字体排印学的计量单位，相当于当前指定的点数。例如，1 em在16px的字体中就是16px。占据的宽度正好是1个中文宽度，而且基本上不受字体影响。 ‘&amp;thinsp’ 窄空格，全称是 Thin Space。占据的宽度比较小，它是em之六分之一宽。 文本强调加粗文本左右两侧加**，且不能有空格 斜体文本左右两侧加*，且不能有空格 斜体加粗文本左右两侧加***，且不能有空格 删除线文本左右两侧加~~,且不能有空格 下划线文本左右两侧加&lt;u&gt;&lt;/u&gt;,且不能有空格 分隔线三个* 引用引用的文字前加&gt;即可，引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt; 链接 行内形式：[超链接名](超链接地址 &quot;超链接描述&quot;) 参考形式：为参考形式的链接定一个 [名称] 方便我们在文章中多次引用（链接名称可以用字母、数字和空格，但是不分大小写）。 Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要用 &lt; &gt; 包起来，如&lt;https://www.baidu.com&gt; 插入图片图片的语法和链接很像。alt text 是替换文本；alt 属性规定在图像无法显示时的替代文本。虽然 alt text 可以不填，但推荐还是填上。Title 是可选项。 行内样式![alt text](/path/to/img.jpg &quot;Title&quot;) 参考样式 ![alt text][id] [id]: /path/to/img.jpg &quot;Title&quot; 代码块与高亮插入程序代码的方式有两种：使用反引号 `（~ 键）、使用缩进（Tab）。 插入行内代码，即插入一个单词或者一句代码的情况，使用 ` 插入。 插入多行代码，分别使用三个反引号（`）包裹多行代码。或者使用缩进。 列表有序列表 数字 + 英文句号 + 空格 + 列表内容 无序列表星号/加号/减号 + 空格 + 列表内容","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"Tools","slug":"Tools","permalink":"/tags/Tools/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-10T12:08:19.724Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura/","link":"","permalink":"/2018/12/12/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}],"tags":[{"name":"Tools","slug":"Tools","permalink":"/tags/Tools/"}],"keywords":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}]}]}